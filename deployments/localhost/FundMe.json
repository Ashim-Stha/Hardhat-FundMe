{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddrToAmt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x594169dfa357dad0ded230ffc79fec69f5875dc5816a17e497d62964233693e1",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1014253",
    "logsBloom": "0x
    "blockHash": "0x29cf43a43d26421e28cb9d62689d61300178dfde95b98791104625f8f1ec9d8f",
    "transactionHash": "0x594169dfa357dad0ded230ffc79fec69f5875dc5816a17e497d62964233693e1",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1014253",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "0151d671d889921c0e85af13c61be9fd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddrToAmt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    //constant and immutable are gas savers\\n    //constant used if used insiide function and immutable if inside constructor\\n    //819952gas\\n    //800392 when constant used\\n    //800392 when both constant and immutable used\\n\\n    uint256 public constant MINUSD = 5 * 10 ** 18;\\n    //use 50/current usd price for 1 eth ;then to WEI\\n\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addrToAmt;\\n\\n    address private immutable i_owner;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    constructor(address s_priceFeedAddr) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddr);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINUSD,\\n            \\\"Didnot send enough\\\"\\n        );\\n        //msg.value is send as 1st parameter to getConversionRate()\\n        //if 2nd param present send inside bracket\\n\\n        s_funders.push(msg.sender);\\n        s_addrToAmt[msg.sender] = msg.value;\\n    }\\n\\n    modifier onlyi_owner() {\\n        // require(msg.sender==i_owner,\\\"Sender is not i_owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _; //rest of the code\\n    }\\n\\n    function withdraw() public onlyi_owner {\\n        //to allow only i_owner to withdraw fund\\n        // require(msg.sender==i_owner,\\\"Sender is not owner\\\");\\n\\n        for (uint256 i = 0; i < s_funders.length; i++) {\\n            address addr = s_funders[i];\\n            s_addrToAmt[addr] = 0;\\n        }\\n\\n        //to reset the s_funders array\\n        s_funders = new address[](0); //represents 0 element\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Send failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyi_owner {\\n        //reading and storing to/from storage cost way more gas\\n        address[] memory funders = s_funders; //memory is way cheaper than storage\\n\\n        for (uint256 i = 0; i < funders.length; i++) {\\n            address addr = funders[i];\\n            //mappings cant be in memory\\n            s_addrToAmt[addr] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddrToAmt(address funder) public view returns (uint256) {\\n        return s_addrToAmt[funder];\\n    }\\n\\n    //what happens if someone send eth without using fund function\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x843aacf8c2ccab2e8c00bbb60b3a13190a2f64547236a8e209933ebddc1253d7\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n\\n        return uint256(answer * 1e10); //since asnwer is in int256\\n        //8 decimals * 1e10=18 decimals\\n    }\\n\\n    // function getVersion() internal view returns (uint256) {\\n    //     AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n    //         0x694AA1769357215DE4FAC081bf1f309aDC325306\\n    //     );\\n    //     return priceFeed.version();\\n    // }\\n\\n    function getConversionRate(\\n        uint256 ethamount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmtinUsd = (ethPrice * ethamount) / 1e18;\\n        return ethAmtinUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x46acd7b20aa03b6e254c5771a674b7e0734f6a6aa006860a7f22b3dc2497ac19\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200128038038062001280833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110fa62000186600039600081816102e80152818161057f015281816105cf01526107c501526110fa6000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80633ccfd60b146100985780634dc93616146100af57806360f65c6e146100da578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102e6565b005b3480156100bb57600080fd5b506100c4610526565b6040516100d19190610a3e565b60405180910390f35b3480156100e657600080fd5b5061010160048036038101906100fc9190610abc565b610532565b60405161010e9190610a3e565b60405180910390f35b34801561012357600080fd5b5061012c61057b565b6040516101399190610af8565b60405180910390f35b34801561014e57600080fd5b506101576105a3565b6040516101649190610b72565b60405180910390f35b6101756101be565b005b61017f6105cd565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610bb9565b61085b565b6040516101b59190610af8565b60405180910390f35b674563918244f400006101fc600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108a290919063ffffffff16565b101561023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610c43565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104165760008082815481106103905761038f610c63565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040e90610cc1565b91505061036e565b50600067ffffffffffffffff81111561043257610431610d0a565b5b6040519080825280602002602001820160405280156104605781602001602082028036833780820191505090505b506000908051906020019061047692919061097e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049d90610d6a565b60006040518083038185875af1925050503d80600081146104da576040519150601f19603f3d011682016040523d82523d6000602084013e6104df565b606091505b5050905080610523576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051a90610dcb565b60405180910390fd5b50565b674563918244f4000081565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610652576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106d557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068b575b5050505050905060005b81518110156107605760008282815181106106fd576106fc610c63565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075890610cc1565b9150506106df565b50600067ffffffffffffffff81111561077c5761077b610d0a565b5b6040519080825280602002602001820160405280156107aa5781602001602082028036833780820191505090505b50600090805190602001906107c092919061097e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080790610d6a565b60006040518083038185875af1925050503d8060008114610844576040519150601f19603f3d011682016040523d82523d6000602084013e610849565b606091505b505090508061085757600080fd5b5050565b60008082815481106108705761086f610c63565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108ae836108de565b90506000670de0b6b3a764000085836108c79190610deb565b6108d19190610e74565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092757600080fd5b505afa15801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095f9190610f32565b5050509150506402540be400816109769190610fad565b915050919050565b8280548282559060005260206000209081019282156109f7579160200282015b828111156109f65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061099e565b5b509050610a049190610a08565b5090565b5b80821115610a21576000816000905550600101610a09565b5090565b6000819050919050565b610a3881610a25565b82525050565b6000602082019050610a536000830184610a2f565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8982610a5e565b9050919050565b610a9981610a7e565b8114610aa457600080fd5b50565b600081359050610ab681610a90565b92915050565b600060208284031215610ad257610ad1610a59565b5b6000610ae084828501610aa7565b91505092915050565b610af281610a7e565b82525050565b6000602082019050610b0d6000830184610ae9565b92915050565b6000819050919050565b6000610b38610b33610b2e84610a5e565b610b13565b610a5e565b9050919050565b6000610b4a82610b1d565b9050919050565b6000610b5c82610b3f565b9050919050565b610b6c81610b51565b82525050565b6000602082019050610b876000830184610b63565b92915050565b610b9681610a25565b8114610ba157600080fd5b50565b600081359050610bb381610b8d565b92915050565b600060208284031215610bcf57610bce610a59565b5b6000610bdd84828501610ba4565b91505092915050565b600082825260208201905092915050565b7f4469646e6f742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610c2d601283610be6565b9150610c3882610bf7565b602082019050919050565b60006020820190508181036000830152610c5c81610c20565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ccc82610a25565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cff57610cfe610c92565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d54600083610d39565b9150610d5f82610d44565b600082019050919050565b6000610d7582610d47565b9150819050919050565b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b6000610db5600b83610be6565b9150610dc082610d7f565b602082019050919050565b60006020820190508181036000830152610de481610da8565b9050919050565b6000610df682610a25565b9150610e0183610a25565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e3a57610e39610c92565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e7f82610a25565b9150610e8a83610a25565b925082610e9a57610e99610e45565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ec481610ea5565b8114610ecf57600080fd5b50565b600081519050610ee181610ebb565b92915050565b6000819050919050565b610efa81610ee7565b8114610f0557600080fd5b50565b600081519050610f1781610ef1565b92915050565b600081519050610f2c81610b8d565b92915050565b600080600080600060a08688031215610f4e57610f4d610a59565b5b6000610f5c88828901610ed2565b9550506020610f6d88828901610f08565b9450506040610f7e88828901610f1d565b9350506060610f8f88828901610f1d565b9250506080610fa088828901610ed2565b9150509295509295909350565b6000610fb882610ee7565b9150610fc383610ee7565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561100257611001610c92565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561103f5761103e610c92565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561107c5761107b610c92565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110b9576110b8610c92565b5b82820290509291505056fea2646970667358221220e5e5ba68d3319b270faa16aef230bf16abcdda53c2cf9a9b6f38cfc6eb6851ed64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80633ccfd60b146100985780634dc93616146100af57806360f65c6e146100da578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100ad6102e6565b005b3480156100bb57600080fd5b506100c4610526565b6040516100d19190610a3e565b60405180910390f35b3480156100e657600080fd5b5061010160048036038101906100fc9190610abc565b610532565b60405161010e9190610a3e565b60405180910390f35b34801561012357600080fd5b5061012c61057b565b6040516101399190610af8565b60405180910390f35b34801561014e57600080fd5b506101576105a3565b6040516101649190610b72565b60405180910390f35b6101756101be565b005b61017f6105cd565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610bb9565b61085b565b6040516101b59190610af8565b60405180910390f35b674563918244f400006101fc600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108a290919063ffffffff16565b101561023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610c43565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036b576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104165760008082815481106103905761038f610c63565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040e90610cc1565b91505061036e565b50600067ffffffffffffffff81111561043257610431610d0a565b5b6040519080825280602002602001820160405280156104605781602001602082028036833780820191505090505b506000908051906020019061047692919061097e565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049d90610d6a565b60006040518083038185875af1925050503d80600081146104da576040519150601f19603f3d011682016040523d82523d6000602084013e6104df565b606091505b5050905080610523576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051a90610dcb565b60405180910390fd5b50565b674563918244f4000081565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610652576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106d557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161068b575b5050505050905060005b81518110156107605760008282815181106106fd576106fc610c63565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061075890610cc1565b9150506106df565b50600067ffffffffffffffff81111561077c5761077b610d0a565b5b6040519080825280602002602001820160405280156107aa5781602001602082028036833780820191505090505b50600090805190602001906107c092919061097e565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080790610d6a565b60006040518083038185875af1925050503d8060008114610844576040519150601f19603f3d011682016040523d82523d6000602084013e610849565b606091505b505090508061085757600080fd5b5050565b60008082815481106108705761086f610c63565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108ae836108de565b90506000670de0b6b3a764000085836108c79190610deb565b6108d19190610e74565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092757600080fd5b505afa15801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095f9190610f32565b5050509150506402540be400816109769190610fad565b915050919050565b8280548282559060005260206000209081019282156109f7579160200282015b828111156109f65782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061099e565b5b509050610a049190610a08565b5090565b5b80821115610a21576000816000905550600101610a09565b5090565b6000819050919050565b610a3881610a25565b82525050565b6000602082019050610a536000830184610a2f565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8982610a5e565b9050919050565b610a9981610a7e565b8114610aa457600080fd5b50565b600081359050610ab681610a90565b92915050565b600060208284031215610ad257610ad1610a59565b5b6000610ae084828501610aa7565b91505092915050565b610af281610a7e565b82525050565b6000602082019050610b0d6000830184610ae9565b92915050565b6000819050919050565b6000610b38610b33610b2e84610a5e565b610b13565b610a5e565b9050919050565b6000610b4a82610b1d565b9050919050565b6000610b5c82610b3f565b9050919050565b610b6c81610b51565b82525050565b6000602082019050610b876000830184610b63565b92915050565b610b9681610a25565b8114610ba157600080fd5b50565b600081359050610bb381610b8d565b92915050565b600060208284031215610bcf57610bce610a59565b5b6000610bdd84828501610ba4565b91505092915050565b600082825260208201905092915050565b7f4469646e6f742073656e6420656e6f7567680000000000000000000000000000600082015250565b6000610c2d601283610be6565b9150610c3882610bf7565b602082019050919050565b60006020820190508181036000830152610c5c81610c20565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ccc82610a25565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cff57610cfe610c92565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d54600083610d39565b9150610d5f82610d44565b600082019050919050565b6000610d7582610d47565b9150819050919050565b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b6000610db5600b83610be6565b9150610dc082610d7f565b602082019050919050565b60006020820190508181036000830152610de481610da8565b9050919050565b6000610df682610a25565b9150610e0183610a25565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e3a57610e39610c92565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e7f82610a25565b9150610e8a83610a25565b925082610e9a57610e99610e45565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ec481610ea5565b8114610ecf57600080fd5b50565b600081519050610ee181610ebb565b92915050565b6000819050919050565b610efa81610ee7565b8114610f0557600080fd5b50565b600081519050610f1781610ef1565b92915050565b600081519050610f2c81610b8d565b92915050565b600080600080600060a08688031215610f4e57610f4d610a59565b5b6000610f5c88828901610ed2565b9550506020610f6d88828901610f08565b9450506040610f7e88828901610f1d565b9350506060610f8f88828901610f1d565b9250506080610fa088828901610ed2565b9150509295509295909350565b6000610fb882610ee7565b9150610fc383610ee7565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561100257611001610c92565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561103f5761103e610c92565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561107c5761107b610c92565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110b9576110b8610c92565b5b82820290509291505056fea2646970667358221220e5e5ba68d3319b270faa16aef230bf16abcdda53c2cf9a9b6f38cfc6eb6851ed64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addrToAmt",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}